{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq2\fcharset0 Georgia;}{\f6\froman\fprq2\fcharset0 Cambria Math;}{\f7\fnil\fprq2\fcharset0 Noto Sans CJK SC Regular;}{\f8\fnil\fprq2\fcharset0 FreeSans;}{\f9\fswiss\fprq0\fcharset128 FreeSans;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033 Normal;}
{\*\cs15\snext15\cf9\ul\ulc0\langfe255\alang255\lang255 Internet Link;}
{\s16\sbasedon0\snext17\sb240\sa120\keepn\dbch\af7\dbch\af8\afs28\loch\f4\fs28 Heading;}
{\s17\sbasedon0\snext17\sl288\slmult1\sb0\sa140 Text Body;}
{\s18\sbasedon17\snext18\sl288\slmult1\sb0\sa140\dbch\af9 List;}
{\s19\sbasedon0\snext19\sb120\sa120\noline\i\dbch\af9\afs24\ai\fs24 Caption;}
{\s20\sbasedon0\snext20\noline\dbch\af9 Index;}
}{\*\generator LibreOffice/5.1.6.2$Linux_X86_64 LibreOffice_project/10m0$Build-2}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr2017\mo11\dy8\hr18\min20}{\printim\yr0\mo0\dy0\hr0\min0}}\deftab720
\viewscale180
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb1440\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep}\pgndec\pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b\rtlch \ltrch\loch\fs32\lang1033\loch\f5
List of Files for this assignment:}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6.m - Octave/MATLAB script that steps you through section 1}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6data1.mat - Example Dataset 1}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6data2.mat - Example Dataset 2}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6data3.mat - Example Dataset 3}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
svmTrain.m - SVM rraining function}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
svmPredict.m - SVM prediction function}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
plotData.m - Plot 2D data}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
visualizeBoundaryLinear.m - Plot linear boundary}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
visualizeBoundary.m - Plot non-linear boundary}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
linearKernel.m - Linear kernel for SVM}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
gaussianKernel.m - Gaussian kernel for SVM}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
[?] dataset3Params.m - Parameters to use for Dataset 3}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6_spam.m - Octave/MATLAB script that steps you through section 2}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
spamTrain.mat - Spam training set}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
spamTest.mat - Spam test set}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
emailSample1.txt - Sample email 1}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
emailSample2.txt - Sample email 2}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
spamSample1.txt - Sample spam 1}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
spamSample2.txt - Sample spam 2}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
vocab.txt - Vocabulary list}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
getVocabList.m - Load vocabulary list}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
porterStemmer.m - Stemming function}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
readFile.m - Reads a file into a character string}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
[?] processEmail.m - Email preprocessing}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
[?] emailFeatures.m - Feature extraction from emails}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\b0\afs40\rtlch \ltrch\loch\fs40\loch\f5
Section 1: }{\cf1\b0\afs40\rtlch \ltrch\loch\fs40\lang1033\loch\f5
Support Vector Machines}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\b0\afs24\rtlch \ltrch\loch\fs24\loch\f5

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\b0\rtlch \ltrch\loch\loch\f5
In this }{\b0\rtlch \ltrch\loch\loch\f5
section}{\b0\rtlch \ltrch\loch\loch\f5
, y}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ou will be using support vector machines (SVMs) with various example 2D datasets. The provided script, ex}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
6.}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
m, will help you step through this exercise. }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\b0\rtlch \ltrch\loch\fs29\loch\f5

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\b0\rtlch \ltrch\loch\fs32\loch\f5
Part 1: }{\b0\rtlch \ltrch\loch\fs32\loch\f5
Training SVM w/ Linear Kernel }{\cf1\b0\rtlch \ltrch\loch\fs32\lang1033\loch\f5
on Dataset 1}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
We start the exercise by first working with a}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
n anonymous }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
dataset that }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
can be separated by a linear boundary. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
The file }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6data1.mat }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
contains such data. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6.m loads }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
the data}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
 and plots them in the graph. Then, it runs svmTrain() with linear kernel and draws the boundary line that separates the data. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
The code for doing this has already been written down for you }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
in ex6.m}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs32\lang1033\loch\f5
Part 2: Training SVM w/ Gaussian Kernel }{\cf1\b0\rtlch \ltrch\loch\fs32\lang1033\loch\f5
on Dataset 2}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
In this part of the exercise, }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
we will be}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
 working with }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
a}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
n anonymous }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
dataset that }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
CANNOT }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
be separated by a linear boundary, }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
but at least can be easily separated with a non-linear boundary}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
The file }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6data}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
2}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
.mat }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
contains such data. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6.m loads ex6data}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
2}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
.mat and plots them in the graph. Then, it runs svmTrain() with }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
Gaussian}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
 kernel and draws the boundary line}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
s}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
 that separate the data. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
The code for doing this has already been written down for you }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
in ex6.m}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs32\lang1033\loch\f5
Part }{\cf1\b0\rtlch \ltrch\loch\fs32\lang1033\loch\f5
3}{\cf1\b0\rtlch \ltrch\loch\fs32\lang1033\loch\f5
: Training SVM w/ Gaussian Kernel }{\cf1\b0\rtlch \ltrch\loch\fs32\lang1033\loch\f5
on Dataset 3}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
Now, this is the important part. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
Y}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ou will be working with a}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
n anonymous }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
dataset that CANNOT }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
be separated by a linear boundary, }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
and also CANNOT be easily separated with a non-linear boundary. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
The file }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6data}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
3}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
.mat }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
contains such data. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6.m loads ex6data}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
3}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
.mat and plots them in the graph. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
It runs dataset3Params() function to optimize the values of C and sigma. }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
Then, it runs svmTrain() with }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
Gaussian}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
 kernel and draws the boundary line}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
s}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
 that separate the data.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
Your task is to properly fill in dataset3Params.m. You should complete the module file to return the optimal C and sigma based on a cross-validation set.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\afs40\rtlch \ltrch\loch\fs40\lang1033\loch\f5
Section }{\cf1\b0\afs40\rtlch \ltrch\loch\fs40\lang1033\loch\f5
2}{\cf1\b0\afs40\rtlch \ltrch\loch\fs40\lang1033\loch\f5
: }{\cf1\b0\afs40\rtlch \ltrch\loch\fs40\lang1033\loch\f5
Spam Classification}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\b0\rtlch \ltrch\loch\loch\f5
In this }{\b0\rtlch \ltrch\loch\loch\f5
section}{\b0\rtlch \ltrch\loch\loch\f5
, y}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ou will be using support vector machines (SVMs) }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
to classify spam emails}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
. The provided script, ex}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
6}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
_spam.m, will help you step through this exercise. }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\afs32\rtlch \ltrch\loch\fs32\lang1033\loch\f5
Part 4: Email Preprocessing}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
To use an SVM to classify emails into Spam vs. Non-Spam, you first need to convert each email into a vector of features. In this part, you will implement the preprocessing steps for each email.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
Your task is to complete the code in processEmail.m to produce a word_indices vector for a given email.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\afs32\rtlch \ltrch\loch\fs32\lang1033\loch\f5
Part 5: Feature Extraction}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
Now, you will convert each email into a vector of features in R^n.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
Your task is to complete in emailFeatures.m to produce a feature vector for a given email.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\fs24\lang1033\nowidctlpar\hyphpar0{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
If your implementation of processEmail.m and emailFeatures.m is correct, then the rest of the code in ex6_spam.m will produce outputs as expected. After training the SVM for Spam Classification, you should see that the classifier gets a training accuracy of about 99.8% and a test accuracy of about 98.5%. In addition, note that the \u8220\'93top predictors\u8221\'94 for spam are output by }{{\*\bkmkstart __DdeLink__1724_897420720}\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6_spam.m}{{\*\bkmkend __DdeLink__1724_897420720}\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
. \u8220\'93}{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
Top predictors\u8221\'94 are words that the classifier thinks are the most indicative of spam. For example, if the words \u8220\'93money\u8221\'94, \u8220\'93casino\u8221\'94, and \u8220\'93lottery\u8221\'94 are output as }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
\u8220\'93top predictors\u8221\'94, }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
this means that those words makes an email highly likely to be spam. If you have impelmented code correctly, }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
ex6_spam.m }{\cf1\b0\rtlch \ltrch\loch\fs24\lang1033\loch\f5
will output more than 10 \u8220\'93top predictors\u8221\'94 for classifying spam.}
\par }